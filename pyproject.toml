[tool.poetry]
name = "tap-airtable"
version = "0.1.0"
description = "tap-airtable is a Singer tap for Airtable, built with the Meltano SDK for Singer Taps."
authors = ["Tomas Votava"]
keywords = ["ELT", "Airtable"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/tomasvotava/tap-airtable"
repository = "https://github.com/tomasvotava/tap-airtable.git"

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
singer-sdk = "*"
requests = "^2.31.0"
backoff = "^2.2.1"
python-slugify = "^8.0.4"

[tool.poetry.group.dev.dependencies]
mypy = "^1.10.0"
pytest = "^8.2.0"
ruff = ">=0.4.4,<0.10.0"
types-requests = "^2.31.0.20240406"
pre-commit = ">=3.7.1,<5.0.0"
pytest-cov = ">=5,<7"
types-python-slugify = "^8.0.2.20240310"

commitizen = ">=3.26,<5.0"
[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true

[build-system]
requires = ["poetry-core>=1.0.8"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = [
    "-vv",
    "--cov=tap_airtable",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-report=lcov",
]

# Singer SDK's deprecation warning
filterwarnings = [
    "ignore:pkg_resources is deprecated as an API:DeprecationWarning",
    "ignore:.*pkg_resources.declare_namespace.*:DeprecationWarning",
    "ignore:jsonschema.RefResolver:DeprecationWarning",
    "ignore:Importing Validator directly:DeprecationWarning",
]


[tool.poetry.scripts]
# CLI declaration
tap-airtable = 'tap_airtable.tap:TapAirtable.cli'

[tool.ruff]
target-version = "py39"
line-length = 120

[tool.ruff.lint]
select = [
    #"D",
    "E",
    "F",
    "B",
    "I",
    "N",
    "UP",
    "S",
    "A",
    "DTZ",
    "PT",
    "SIM",
    "PTH",
    "PD",
    "RUF",
    "T20",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["tap_airtable"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "S101",   # allow asserts in tests
    "RUF018", # allow asserts with walrus in tests
]


[tool.mypy]
strict = true

[[tool.mypy.overrides]]
module = ["singer_sdk.*"]
ignore_missing_imports = true
